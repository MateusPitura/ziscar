import{r as n,j as s,u as f,b as x,c as E,i as S,d as U,O as C,e as g}from"./index-UdT0GBA4.js";import{u as h}from"./useIsFetching-DpNHUXZr.js";import{U as v}from"./UserForm-C5KJ_5TK.js";import{p as y}from"./parseAddressToCreate-D-7d1H4W.js";import"./schemas-BggDEbt9.js";import"./useButtonState-N-GWfCKe.js";import"./Choice-Dg5X3hHC.js";import"./AddressFields-Do7ovckI.js";import"./FieldArray-B-TaBd7C.js";import"./Select-DxVA1XCQ.js";import"./dialog-Cf7DmMJZ.js";import"./PageHeader-BWgTwsAh.js";import"./Section-C42prP9c.js";import"./Dialog-EaJkbypX.js";import"./DialogContext-BXF1n5N_.js";import"./index-AXMlH8He.js";import"./index-Bc_KExWn.js";const P=n.createContext(null);function w({children:t}){const[e,r]=n.useState("");function o(i){r(i)}const a=n.useMemo(()=>({example:e,handleExample:o}),[e]);return s.jsx(P.Provider,{value:a,children:t})}function N(){const{safeFetch:t}=f(),{showSuccessSnackbar:e}=x(),r=h({queryKey:["cepApi"]}),o=E(),a=S();async function i(m){const{address:p,...d}=m,l=y({address:p});await t(`${g}/user`,{method:"POST",body:{...d,address:l},resource:"USERS",action:"CREATE"})}const{mutate:u,isPending:c}=U({mutationFn:i,onSuccess:()=>{e({title:"Um email será enviado",description:"Confira também a caixa de spam"}),a("/users"),o.invalidateQueries({queryKey:["users"]})}});return s.jsx(v,{defaultValues:C,onSubmit:u,isPending:c||!!r,headerTitle:"Novo usuário",resource:"USERS",action:"CREATE",allowEditRole:!0})}function L(){return s.jsx(w,{children:s.jsx(N,{})})}export{L as default};
