import{r as n,j as s,u as f,b as x,c as E,f as S,d as U,L as C,e as g}from"./index-DLLA1f-v.js";import{u as h}from"./useIsFetching-Ce26lW8Z.js";import{U as v}from"./UserForm-DYb4Mn6v.js";import{p as y}from"./parseAddressToCreate-D-7d1H4W.js";import"./schemas-Bhi0Dh6I.js";import"./useButtonState-3b0McXTU.js";import"./Choice-BxW3kVCA.js";import"./AddressFields-DZij5ndV.js";import"./FieldArray-BBhN6Zd9.js";import"./dialog-BH6A_dKB.js";import"./PageHeader-Bs9TDp09.js";import"./Section-BgbGHRg0.js";import"./Dialog-D33IGNgm.js";import"./useDialog-DlT6EUiq.js";import"./index-9G9dNcef.js";import"./index-2Ad1AATz.js";const P=n.createContext(null);function w({children:t}){const[e,r]=n.useState("");function o(i){r(i)}const a=n.useMemo(()=>({example:e,handleExample:o}),[e]);return s.jsx(P.Provider,{value:a,children:t})}function N(){const{safeFetch:t}=f(),{showSuccessSnackbar:e}=x(),r=h({queryKey:["cepApi"]}),o=E(),a=S();async function i(m){const{address:d,...p}=m,l=y({address:d});await t(`${g}/user`,{method:"POST",body:{...p,address:l},resource:"USERS",action:"CREATE"})}const{mutate:u,isPending:c}=U({mutationFn:i,onSuccess:()=>{e({title:"Um email será enviado",description:"Confira também a caixa de spam"}),a("/users"),o.invalidateQueries({queryKey:["users"]})}});return s.jsx(v,{defaultValues:C,onSubmit:u,isPending:c||!!r,headerTitle:"Novo usuário",resource:"USERS",action:"CREATE",allowEditRole:!0})}function I(){return s.jsx(w,{children:s.jsx(N,{})})}export{I as default};
