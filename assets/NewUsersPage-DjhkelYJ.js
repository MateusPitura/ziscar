import{r as n,j as s,b as f,c as x,d as E,a as S,e as U,i as C,f as g}from"./index-ca60C8Ex.js";import{u as h}from"./useIsFetching-DDtOVjy5.js";import{U as v}from"./UserForm-CY7WPOpu.js";import{p as y}from"./parseAddressToCreate-D-7d1H4W.js";import"./schemas-C9-uV1IB.js";import"./Choice-Cynndokp.js";import"./AddressFields-1MYWSNeV.js";import"./PageFooter-BSA0VpeV.js";import"./PageHeader-L384JM_x.js";import"./index-CyzFpeBQ.js";import"./index-BqtrbC3K.js";import"./Dialog-BEgjFVpa.js";const P=n.createContext(null);function w({children:t}){const[e,r]=n.useState("");function a(i){r(i)}const o=n.useMemo(()=>({example:e,handleExample:a}),[e]);return s.jsx(P.Provider,{value:o,children:t})}function N(){const{safeFetch:t}=f(),{showSuccessSnackbar:e}=x(),r=h({queryKey:["cepApi"]}),a=E(),o=S();async function i(m){const{address:d,...p}=m,l=y({address:d});await t(`${g}/user`,{method:"POST",body:{...p,address:l},resource:"USERS",action:"CREATE"})}const{mutate:u,isPending:c}=U({mutationFn:i,onSuccess:()=>{e({title:"Um email será enviado",description:"Confira também a caixa de spam"}),o("/users"),a.invalidateQueries({queryKey:["users"]})}});return s.jsx(v,{defaultValues:C,onSubmit:u,isPending:c||!!r,headerTitle:"Novo usuário",resource:"USERS",action:"CREATE",allowEditRole:!0})}function V(){return s.jsx(w,{children:s.jsx(N,{})})}export{V as default};
