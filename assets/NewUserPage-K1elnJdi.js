import{r as i,j as s,b as f,c as x,d as E,a as S,e as U,i as C,f as g}from"./index-CV0TP6Xw.js";import{u as h}from"./useIsFetching-DbePOVqm.js";import{U as v}from"./UserForm-DU8HdNMa.js";import{p as y}from"./parseAddressToCreate-D-7d1H4W.js";import"./index-D0UprIr6.js";import"./Choice-CIb13fO6.js";import"./AddressFields-CvTF2Vnb.js";import"./PageFooter-wK_25X2U.js";import"./PageHeader-CYamZWWv.js";import"./index-BTnMZTzr.js";import"./Dialog-D3LjZ4tr.js";const P=i.createContext(null);function w({children:t}){const[e,r]=i.useState("");function a(n){r(n)}const o=i.useMemo(()=>({example:e,handleExample:a}),[e]);return s.jsx(P.Provider,{value:o,children:t})}function N(){const{safeFetch:t}=f(),{showSuccessSnackbar:e}=x(),r=h({queryKey:["cepApi"]}),a=E(),o=S();async function n(m){const{address:d,...l}=m,p=y({address:d});await t(`${g}/user`,{method:"POST",body:{...l,address:p},resource:"USERS",action:"CREATE"})}const{mutate:u,isPending:c}=U({mutationFn:n,onSuccess:()=>{e({title:"Um email será enviado",description:"Confira também a caixa de spam"}),o("/users"),a.invalidateQueries({queryKey:["users"]})}});return s.jsx(v,{defaultValues:C,onSubmit:u,isPending:c||!!r,headerTitle:"Novo usuário",resource:"USERS",action:"CREATE",allowEditRole:!0})}function Q(){return s.jsx(w,{children:s.jsx(N,{})})}export{Q as default};
